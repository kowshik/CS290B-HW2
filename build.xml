<?xml version="1.0" encoding="UTF-8"?>





<project name="CS290B-HW2" basedir=".">
    <description>
        Builds, tests, and runs the project CS-290B-HW2.
    </description>
    
    <property name="src" location="source"/>
    <property name="build" location="build/classes"/>
    <property name="dist" location="dist"/>
    
    <!-- ant jsch JAR details -->
    <property name="ant_jsch_location_local" location="/home/${username}/.ant/lib/"/>
    <property name="ant_jsch_location_remote" location="/cs/student/${username}/.ant/lib/"/>
    <property name="ant_jsch_name" value="jsch-0.1.43.jar"/>
    
    <!-- codebase properties -->
    <property name="client_file_codebase" location="/cs/student/kowshik/public_html/CS290B/HW2/"/>
    <property name="client_web_codebase" value="http://www.cs.ucsb.edu/~kowshik/CS290B/HW2/"/>
    <property name="client_codebase_server" value="csil.cs.ucsb.edu"/>
    
    <!-- host names -->
    <property name="host1" value="blind.cs.ucsb.edu"/>
    <property name="host2" value="satchmo.cs.ucsb.edu"/>
    <property name="host_computespace" value="snoopy.cs.ucsb.edu"/>
    
    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <sshexec host="${client_codebase_server}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="rm -fr ${client_file_codebase}/tasks/" passphrase=""/>
        <sshexec host="${client_codebase_server}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p ${client_file_codebase}/tasks/" passphrase=""/>
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
    
    
    <target name="compile" description="compiles the source">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}"/>
    </target>
    
    <target name="javadoc" description="create javadocs" depends="compile">
        <javadoc packagenames="tasks.*,api.*,client.*,system.*" sourcepath="${src}" destdir="documents/javadoc"/>
    </target>
    
    
    <target name="build_client" description="builds client" depends="compile">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
        
        <!-- Make client.jar file -->
        <jar jarfile="${dist}/client.jar" basedir="${build}" includes="api/** client/** tasks/**  system/**"/>
        
        <!-- Copy to web server -->
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${client_codebase_server}:${client_file_codebase}/tasks/">
            <fileset dir="${build}/tasks/">
                <include name="*.class"/>
            </fileset>
        </scp>
    </target>
    
    
    <target name="build_computer" description="builds computer" depends="compile">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
        
        <!-- Make computer.jar file -->
        <jar jarfile="${dist}/computer.jar" basedir="${build}" includes="api/** system/Computer.class system/Computer2Space.class system/ComputerImpl.class system/ResultImpl.class"/>
        
        
    </target>
    
    
    
    
    
    <target name="runLocalComputer" depends="build_computer" description="run a computer locally">
        
        <!-- run computer -->
        <java classname="system.ComputerImpl" fork="true">
            <jvmarg value="-Djava.security.policy=policy/policy"/>
            <arg value="localhost:2672"/>
            <classpath>
                <pathelement location="${dist}/computer.jar"/>
            </classpath>
        </java>
    </target>
    
    
    
    
    <target name="runRemoteComputers" depends="build_computer" description="run remote computers">
        <!-- create ~/.ant/lib in remote computers -->
        <sshexec host="${host1}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p /cs/student/${username}/.ant/lib/" passphrase=""/>
        <sshexec host="${host2}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p /cs/student/${username}/.ant/lib/" passphrase=""/>
        
        <!-- scp ant-jsch jar to each of the remote computers -->
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host1}:${ant_jsch_location_remote}">
            <fileset dir="${ant_jsch_location_local}">
                <include name="${ant_jsch_name}"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host2}:${ant_jsch_location_remote}">
            <fileset dir="${ant_jsch_location_local}">
                <include name="${ant_jsch_name}"/>
            </fileset>
        </scp>
        
        <!-- create location to place build.xml, policy file, computer.jar in remote computers -->
        <sshexec host="${host1}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p /cs/student/${username}/computer_${host1}/policy" passphrase=""/>
        <sshexec host="${host2}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p /cs/student/${username}/computer_${host2}/policy" passphrase=""/>
        <!-- scp build.xml, policy fule and computer.jar to each of the remote computers -->
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host1}:/cs/student/${username}/computer_${host1}/">
            <fileset dir="${dist}/">
                <include name="computer.jar"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host1}:/cs/student/${username}/computer_${host1}/">
            <fileset dir="./">
                <include name="build_remotecomputer.xml"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host1}:/cs/student/${username}/computer_${host1}/policy/">
            <fileset dir="policy/">
                <include name="policy"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host2}:/cs/student/${username}/computer_${host2}/">
            <fileset dir="${dist}/">
                <include name="computer.jar"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host2}:/cs/student/${username}/computer_${host2}/">
            <fileset dir="./">
                <include name="build_remotecomputer.xml"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host1}:/cs/student/${username}/computer_${host2}/policy/">
            <fileset dir="policy/">
                <include name="policy"/>
            </fileset>
        </scp>
        
        <!-- run computer in remote hosts -->
        <parallel>
            <sshexec host="${host1}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="cd /cs/student/${username}/computer_${host1}/; ant -buildfile build_remotecomputer.xml runRemoteComputer" passphrase=""/>
            <sshexec host="${host2}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="cd /cs/student/${username}/computer_${host2}/; ant -buildfile build_remotecomputer.xml runRemoteComputer" passphrase=""/>
            
        </parallel>
    </target>
    
    
    
    
    
    
    
    
    
    <target name="build_space" depends="compile" description="build space">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
        
        <!-- Make space.jar file -->
        <jar jarfile="${dist}/space.jar" basedir="${build}" includes="api/** system/SpaceImpl.class system/ComputerProxy.class system/Computer2Space.class system/Computer.class system/ResultImpl.class"/>
        
    </target>
    
    
    <target name="runLocalSpace" depends="build_space" description="run compute space locally">
        
        <!-- run space -->
        <java classname="system.SpaceImpl" fork="true">
            <jvmarg value="-Djava.security.policy=policy/policy"/>
            <classpath>
                <pathelement location="${dist}/space.jar"/>
            </classpath>
        </java>
    </target>
    
    
    
    <target name="runRemoteSpace" depends="build_space" description="runs a remote compute space">
        <!-- create ~/.ant/lib in remote computers -->
        <sshexec host="${host_computespace}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p /cs/student/${username}/.ant/lib/" passphrase=""/>
        
        <!-- scp ant-jsch jar to each of the remote computers -->
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host_computespace}:${ant_jsch_location_remote}">
            <fileset dir="${ant_jsch_location_local}">
                <include name="${ant_jsch_name}"/>
            </fileset>
        </scp>
        
        <!-- create location to place build.xml, policy file, computer.jar in remote computers -->
        <sshexec host="${host_computespace}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="mkdir -p /cs/student/${username}/computespace_${host_computespace}/policy" passphrase=""/>
        
        <!-- scp build.xml, policy file and computer.jar to each of the remote computers -->
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host_computespace}:/cs/student/${username}/computespace_${host_computespace}/">
            <fileset dir="${dist}/">
                <include name="space.jar"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host_computespace}:/cs/student/${username}/computespace_${host_computespace}/">
            <fileset dir="./">
                <include name="build_remotespace.xml"/>
            </fileset>
        </scp>
        
        <scp keyfile="/home/${username}/.ssh/headless_rsa" passphrase="" todir="${username}@${host_computespace}:/cs/student/${username}/computespace_${host_computespace}/policy/">
            <fileset dir="policy/">
                <include name="policy"/>
            </fileset>
        </scp>
        
        <!-- run compute space in remote hosts -->
        <sshexec host="${host_computespace}" username="${username}" keyfile="/home/${username}/.ssh/headless_rsa" trust="true" command="cd /cs/student/${username}/computespace_${host_computespace}/; ant -buildfile build_remotespace.xml runRemoteSpace" passphrase=""/>
        
        
    </target>
    
    
    
    <target name="runMandelbrotSetClient" description="run mandelbrot set client" depends="build_client">
        <!-- run client -->
        <java classname="client.MandelbrotSetClient" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy/policy"/>
            <arg value="snoopy.cs.ucsb.edu:2672"/>
            <classpath>
                <pathelement location="${dist}/client.jar"/>
            </classpath>
        </java>
    </target>
    
    <target name="runTspClient" description="run travelling salesman problem client" depends="build_client">
        <!-- run client -->
        <java classname="client.TspClient" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy/policy"/>
            <arg value="snoopy.cs.ucsb.edu:2672"/>
            <classpath>
                <pathelement location="${dist}/client.jar"/>
            </classpath>
        </java>
    </target>
    
    
    
    <target name="runLocalMandelbrotSetClient" description="run mandelbrot set client locally" depends="build_client">
        <!-- run client -->
        <java classname="client.MandelbrotSetClient" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy/policy"/>
            <arg value="localhost:2672"/>
            <classpath>
                <pathelement location="${dist}/client.jar"/>
            </classpath>
        </java>
    </target>
    
    <target name="runLocalTspClient" description="run travelling salesman problem client locally" depends="build_client">
        <!-- run client -->
        <java classname="client.TspClient" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy/policy"/>
            <arg value="localhost:2672"/>
            <classpath>
                <pathelement location="${dist}/client.jar"/>
            </classpath>
        </java>
    </target>
    
    
    
</project>
